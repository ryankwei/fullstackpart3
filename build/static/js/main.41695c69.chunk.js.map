{"version":3,"sources":["components/NamesList.js","components/Filter.js","components/InputForm.js","components/ServerIO.js","components/Notification.js","App.js","index.js"],"names":["NamesList","props","filter","persons","person","name","toLowerCase","includes","map","i","key","number","onClick","deletePerson","id","Filter","value","filterBy","onChange","filterChange","InputForm","onSubmit","addName","newName","handleNewName","newNum","handleNewNum","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","isError","className","App","useState","setPersons","setNewName","setNewNum","newFilter","setNewFilter","setMessage","errorMessage","setErrorMessage","useEffect","ServerIO","returnedObj","event","target","preventDefault","some","e","window","confirm","setTimeout","catch","error","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41695c69.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NamesList = (props) => {\r\n  let returnArray = []\r\n  if(props.filter !== '')\r\n    returnArray=props.persons.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase()))\r\n  else\r\n    returnArray = props.persons\r\n  return returnArray.map((person, i) => (\r\n    <div key={i}>\r\n      <p>{person.name} {person.number}</p>\r\n      <button onClick={props.deletePerson(person.id)}>delete</button>\r\n    </div>\r\n    ))\r\n}\r\n\r\nexport default NamesList\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => (\r\n  <div>\r\n    filter shown with <input value={props.filterBy} onChange={props.filterChange} />\r\n  </div>\r\n)\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst InputForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addName}>\r\n      <h3>add a new</h3>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.handleNewName}/>\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNum} onChange={props.handleNewNum}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default InputForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getList = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getList, create, update, deletePerson }\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n  if(message === null) {\r\n    return null\r\n  }\r\n  if(isError) {\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport NamesList from './components/NamesList'\r\nimport Filter from './components/Filter'\r\nimport InputForm from './components/InputForm'\r\nimport ServerIO from './components/ServerIO'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNum, setNewNum ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    ServerIO\r\n      .getList()\r\n      .then(returnedObj => {\r\n        setPersons(returnedObj)\r\n      })\r\n  }, [])\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    if(persons.some(e => e.name === newName)) {\r\n      const confirmChange = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n      if(confirmChange) {\r\n        const id = persons.filter(person => person.name === newName)[0].id\r\n        const newObj = { name: newName, number: newNum }\r\n        ServerIO\r\n          .update(id, newObj)\r\n          .then(returnedObj => {\r\n            setPersons(persons.map(person => (id===person.id) ? returnedObj : person))\r\n            setNewName('')\r\n            setNewNum('')\r\n            setMessage(`Updated ${returnedObj.name}'s phonenumber`)\r\n            setTimeout(() => { setMessage(null) }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(\r\n              `${newName} was already removed from server`\r\n            )\r\n            setTimeout(()=> {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n            setNewName('')\r\n            setNewNum('')\r\n            ServerIO\r\n              .getList()\r\n              .then(returnedObj => setPersons(returnedObj))\r\n          })\r\n      }\r\n    }\r\n    else {\r\n      ServerIO\r\n        .create({ name: newName, number: newNum })\r\n        .then(returnedObj => {\r\n          setPersons(persons.concat(returnedObj))\r\n          setNewName('')\r\n          setNewNum('')\r\n          setMessage(`Added ${returnedObj.name}`)\r\n          setTimeout(() => { setMessage(null) }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleDelete = (id) => () => {\r\n    const person = persons.filter(person => person.id === id)[0]\r\n    console.log(person)\r\n    const confirmDelete = window.confirm(`Delete ${person.name}?`)\r\n    if(confirmDelete) {\r\n      ServerIO\r\n        .deletePerson(id)\r\n        .then(returnedObj => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const filterChange = (event) => setNewFilter(event.target.value)\r\n\r\n  const handleNewName = (event) => setNewName(event.target.value)\r\n\r\n  const handleNewNum = (event) => setNewNum(event.target.value)\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification\r\n        message={message}\r\n        isError={false}\r\n      />\r\n      <Notification\r\n        message={errorMessage}\r\n        isError={true}\r\n      />\r\n      <Filter\r\n        filterBy={newFilter}\r\n        filterChange={filterChange}\r\n      />\r\n      <InputForm\r\n        addName={addName}\r\n        newName={newName}\r\n        handleNewName={handleNewName}\r\n        newNum={newNum}\r\n        handleNewNum={handleNewNum}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <NamesList\r\n        persons={persons}\r\n        filter={newFilter}\r\n        deletePerson={handleDelete}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}